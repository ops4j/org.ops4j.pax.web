<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2021 OPS4J.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.ops4j.pax.web.itest</groupId>
		<artifactId>pax-web-itest-container</artifactId>
		<version>10.0.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<groupId>org.ops4j.pax.web.itest</groupId>
	<artifactId>pax-web-itest-tomcat</artifactId>

	<name>OPS4J Pax Web - Container Tests - Tomcat</name>

	<description>Integration tests for Tomcat</description>

	<dependencies>

		<!-- pax-web own artifacts -->

		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-jsp</artifactId>
			<!-- so it's not added to failsafe classpath -->
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<!-- With just this dependency, we should transitively get everything that's needed for integration tests -->
			<groupId>org.ops4j.pax.web.itest</groupId>
			<artifactId>pax-web-itest-container-common</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-tomcat-common</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-tomcat</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-tomcat-bundle</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-tomcat-websocket</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- OPS4J dependencies -->

		<dependency>
			<!--
				can't be transtive dependency from pax-web-itest-container-common, because it has to be "runtime"
				scoped, so it's not added to maven-failsafe-plugin classpath (duplicate SLF4J binding)
			-->
			<groupId>org.ops4j.pax.logging</groupId>
			<artifactId>pax-logging-api</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- OSGi -->

		<dependency>
			<!-- Can't be added to maven-failsafe-plugin classpath -->
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.service.cdi</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<!-- Can't be added to maven-failsafe-plugin classpath -->
			<groupId>org.apache.aries.cdi</groupId>
			<artifactId>org.apache.aries.cdi.extender</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- JavaEE -->

		<dependency>
			<!--
				can't be transtive dependency from pax-web-itest-container-common, because it has to be "runtime"
				scoped, so it's not added to maven-failsafe-plugin classpath (duplicate SLF4J binding)
			-->
			<groupId>jakarta.el</groupId>
			<artifactId>jakarta.el-api</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<!-- Can't be added to maven-failsafe-plugin classpath -->
			<groupId>jakarta.enterprise</groupId>
			<artifactId>jakarta.enterprise.cdi-api</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<!-- Can't be added to maven-failsafe-plugin classpath -->
			<groupId>org.apache.myfaces.core</groupId>
			<artifactId>myfaces-api</artifactId>
			<scope>runtime</scope>
		</dependency>

	</dependencies>

</project>
