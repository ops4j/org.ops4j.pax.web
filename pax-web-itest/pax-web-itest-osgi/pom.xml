<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2021 OPS4J.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.ops4j.pax.web</groupId>
		<artifactId>pax-web-itest</artifactId>
		<version>9.0.21</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<groupId>org.ops4j.pax.web.itest</groupId>
	<artifactId>pax-web-itest-osgi</artifactId>

	<name>OPS4J Pax Web - OSGi Integration Tests</name>

	<description>Integration tests for Pax Web for any container and basic services</description>

	<build>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources-binary</directory>
				<filtering>false</filtering>
			</testResource>
		</testResources>

		<plugins>

			<!-- Core plugins -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*IntegrationTest.java</include>
					</includes>
					<systemPropertyVariables>
						<!-- to configure pax-exam with pax.exam.system=default which gives us more control over installed bundles -->
						<pax.exam.configuration>file:./src/test/resources/controlled-exam.properties</pax.exam.configuration>
						<!--
							system properties that specify versions of bundles installed using
							org.ops4j.pax.exam.CoreOptions.mavenBundle(), but for which we don't want to add
							maven dependencies (otherwise required if using MavenArtifactProvisionOption.versionAsInProject())
						-->
						<version.asm>${dependency.org.ow2.asm}</version.asm>
						<version.xbean>${dependency.org.apache.xbean}</version.xbean>
					</systemPropertyVariables>
					<redirectTestOutputToFile>false</redirectTestOutputToFile>
					<runOrder>alphabetical</runOrder>
					<!--
						be careful to not load pax-logging-log4j1 and pax-logging-api through system class loader.
						failsafe has to isolate running OSGi framework from these jars - they have to be installed
						only as bundles. That's why most of the dependencies have "runtime" instead of "test" scope
					-->
					<classpathDependencyScopeExclude>runtime</classpathDependencyScopeExclude>
					<forkCount>1</forkCount>
					<reuseForks>false</reuseForks>
					<trimStackTrace>false</trimStackTrace>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- ServiceMix plugins -->

			<plugin>
				<groupId>org.apache.servicemix.tooling</groupId>
				<artifactId>depends-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-depends-file</id>
						<goals>
							<goal>generate-depends-file</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<dependencies>

		<!--
			Note: "runtime" dependencies are not available in compilation classpath, but _are_ available in
			test classpath. Keep them "runtime" in order to keep them away from maven-failsafe-plugin classpath
			due to classpathDependencyScopeExclude=runtime. In Pax Exam tests, these will be (or not) added if
			needed using Pax Exam methods.
		-->

		<!-- pax-web own artifacts -->

		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-api</artifactId>
<!--			<scope>runtime</scope>-->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-spi</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-runtime</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-jetty</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-tomcat-common</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.ops4j.pax.web.itest</groupId>
			<artifactId>pax-web-itest-common</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-compatibility-annotation13</artifactId>
		</dependency>

		<!-- pax-web internal samples -->

		<dependency>
			<groupId>org.ops4j.pax.web.samples</groupId>
			<artifactId>initializers</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web.samples</groupId>
			<artifactId>initializers-fragment1</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web.samples</groupId>
			<artifactId>initializers-fragment2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web.samples</groupId>
			<artifactId>pax-web-spi-fragment</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- pax-web war samples -->

		<dependency>
			<groupId>org.ops4j.pax.web.samples</groupId>
			<artifactId>war-simplest-osgi</artifactId>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web.samples</groupId>
			<artifactId>jsf-primefaces-embedded</artifactId>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web.samples</groupId>
			<artifactId>jsf-primefaces-embedded-fragment</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web.samples</groupId>
			<artifactId>jsf-primefaces-commons1</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web.samples</groupId>
			<artifactId>jsf-primefaces-commons2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web.samples</groupId>
			<artifactId>jsf-primefaces-commons3</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- OPS4J dependencies -->

		<dependency>
			<!-- required by pax-exam -->
			<groupId>org.ops4j.base</groupId>
			<artifactId>ops4j-base-lang</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- required by pax-exam -->
			<groupId>org.ops4j.base</groupId>
			<artifactId>ops4j-base-util-property</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.ops4j.pax.logging</groupId>
			<artifactId>pax-logging-api</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.logging</groupId>
			<artifactId>pax-logging-log4j2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-junit4</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-container-native</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-link-mvn</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-extender-service</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- OSGi -->

		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.cmpn</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.configadmin</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.metatype</artifactId>
			<!-- this has to be test scope, because it's related to how pax-exam analyzes the test classes -->
			<scope>test</scope>
		</dependency>

		<!-- JavaEE -->

		<dependency>
			<groupId>jakarta.annotation</groupId>
			<artifactId>jakarta.annotation-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<!-- it has to be "test" - Pax Exam needs javax.servlet classes when loading @Test classes -->
			<scope>test</scope>
		</dependency>

		<!-- ServiceMIX -->

		<dependency>
			<groupId>org.apache.servicemix.bundles</groupId>
			<artifactId>org.apache.servicemix.bundles.javax-inject</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Logging -->

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j2-impl</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Other -->

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

</project>
